{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rehan\\\\Desktop\\\\netlify-cms-react-app-master\\\\src\\\\pages\\\\post.js\";\nimport React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Markdown from \"react-markdown\";\nimport Layout from \"../components/layout\";\nimport postlist from \"../posts.json\";\nimport \"./pages.css\";\n\nconst Post = props => {\n  const validId = parseInt(props.match.params.id);\n\n  if (!validId) {\n    return React.createElement(Redirect, {\n      to: \"/404\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    });\n  }\n\n  const fetchedPost = {};\n  let postExists = false;\n  postlist.forEach((post, i) => {\n    if (validId === post.id) {\n      fetchedPost.title = post.title ? post.title : \"No title given\";\n      fetchedPost.content = post.content ? post.content : \"No content given\";\n      postExists = true;\n    }\n  });\n\n  if (postExists === false) {\n    return React.createElement(Redirect, {\n      to: \"/404\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"post\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, fetchedPost.title), React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Published on \", fetchedPost.date, \" by \", fetchedPost.author), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(Markdown, {\n    source: fetchedPost.content,\n    escapeHtml: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })));\n};\n\nexport default Post;","map":{"version":3,"sources":["C:/Users/rehan/Desktop/netlify-cms-react-app-master/src/pages/post.js"],"names":["React","Redirect","Markdown","Layout","postlist","Post","props","validId","parseInt","match","params","id","fetchedPost","postExists","forEach","post","i","title","content","date","author"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAO,aAAP;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACpB,QAAMC,OAAO,GAAGC,QAAQ,CAACF,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBC,EAApB,CAAxB;;AACA,MAAI,CAACJ,OAAL,EAAc;AACV,WAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AACD,QAAMK,WAAW,GAAG,EAApB;AACA,MAAIC,UAAU,GAAG,KAAjB;AACAT,EAAAA,QAAQ,CAACU,OAAT,CAAiB,CAACC,IAAD,EAAOC,CAAP,KAAa;AAC1B,QAAIT,OAAO,KAAKQ,IAAI,CAACJ,EAArB,EAAyB;AACrBC,MAAAA,WAAW,CAACK,KAAZ,GAAoBF,IAAI,CAACE,KAAL,GAAaF,IAAI,CAACE,KAAlB,GAA0B,gBAA9C;AACAL,MAAAA,WAAW,CAACM,OAAZ,GAAsBH,IAAI,CAACG,OAAL,GAAeH,IAAI,CAACG,OAApB,GAA8B,kBAApD;AACAL,MAAAA,UAAU,GAAG,IAAb;AACH;AACJ,GAND;;AAOA,MAAIA,UAAU,KAAK,KAAnB,EAA0B;AACtB,WAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AACD,SACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,WAAW,CAACK,KAAjB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAqBL,WAAW,CAACO,IAAjC,UAA2CP,WAAW,CAACQ,MAAvD,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII,oBAAC,QAAD;AAAU,IAAA,MAAM,EAAER,WAAW,CAACM,OAA9B;AAAuC,IAAA,UAAU,EAAE,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ,CADJ;AAUH,CA3BD;;AA6BA,eAAeb,IAAf","sourcesContent":["import React from \"react\"\nimport { Redirect } from \"react-router-dom\"\nimport Markdown from \"react-markdown\"\nimport Layout from \"../components/layout\"\nimport postlist from \"../posts.json\"\nimport \"./pages.css\"\n\nconst Post = (props) => {\n    const validId = parseInt(props.match.params.id)\n    if (!validId) {\n        return <Redirect to=\"/404\" />\n    }\n    const fetchedPost = {}\n    let postExists = false\n    postlist.forEach((post, i) => {\n        if (validId === post.id) {\n            fetchedPost.title = post.title ? post.title : \"No title given\"\n            fetchedPost.content = post.content ? post.content : \"No content given\"\n            postExists = true\n        }\n    })\n    if (postExists === false) {\n        return <Redirect to=\"/404\" />\n    }\n    return (\n        <Layout>\n            <div className=\"post\">\n                <h2>{fetchedPost.title}</h2>\n                <small>Published on {fetchedPost.date} by {fetchedPost.author}</small>\n                <hr/>\n                <Markdown source={fetchedPost.content} escapeHtml={false} />\n            </div>\n        </Layout>\n    )\n}\n\nexport default Post"]},"metadata":{},"sourceType":"module"}